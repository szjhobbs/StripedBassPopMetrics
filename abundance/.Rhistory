})
# attempt at some type of bubble plot to demonstrate annual cpue variation by
# month but abandoned the idea for now (14-Jul-2020)
# str(cc_cpue)
p_cc_cpue <- Plot(data = cc_cpue, x = CYear, y = Month, adjUsr = 0.5)
p_cc_cpue$grid(xRng = T, yRng = T)
Axis(p_cc_cpue, side = 1, labelAdj = 0.2, interval = 5, offset = -1)
Axis(p_cc_cpue, side = 2, labelAdj = 0.3)
# points(p_cc_cpue, cex = cc_cpue$Avg * 1.0, col = as.factor(cc_cpue$Type), pch = as.numeric(as.factor(cc_cpue$Type)))
points(p_cc_cpue, cex = cc_cpue[["Avg"]])
# attempt to plot box plot but abandoned the idea for now (14-Jul-2020)
p_bx <- Plot(
x = cc_split[["CYear"]],
y = cc_split[["CPUE"]][, "CPUE"],
subset = !is.infinite(cc_split[["CPUE"]][, "CPUE"]) &
!is.na(cc_split[["CPUE"]][, "CPUE"]) &
(cc_split[["CPUE"]][, "CPUE"] > 0 & cc_split[["CPUE"]][, "CPUE"] < 7) &
cc_split[["Type"]] %in% "rvr"
)
p_bx$grid()
points(
x = unique(p_bx$data()[["x"]]),
y = aggregate(
y ~ x,
data = p_bx$data(),
FUN = median,
na.rm = TRUE
)[["y"]]
)
Axis(p_bx, side = 2)
# because we only need the data variable CYear & Month already exist in cc_cpue
cc_cpue$Data <- Split(
data = cc_split,
vars = CPUE,
splitVars = c(CYear, Month),
drop = TRUE
)[["Data"]]
# to get ratio of records with 0 catch to all records
cc_cpue$Ratio0 <- t(vapply(cc_cpue[["Data"]], FUN = function(d) {
# return(nrow(d))
b <- d[["CPUE"]][, "Catch"] %in% 0
if (all(!b)) return(c(Ratio = 1, Recs = nrow(d)))
a0 <- sum(d[["CPUE"]][b, "Anglers"], na.rm = F)
a <- sum(d[["CPUE"]][, "Anglers"], na.rm = F)
c(Ratio = a0 / a, Recs = nrow(d))
}, FUN.VALUE = numeric(2L)))
# range(cc_cpue[["Ratio0"]][, "Ratio"])
lo <- layout(mat = 2:1, heights = c(0.15, 0.85))
par(mar = c(1.5, 1.5, 0.5, 0.5), oma = c(1.5, 1.5, 0.5, 0.5))
p_ratio0 <- Plot(data = cc_cpue, x = CYear, y = Month, adjUsr = 1)
# p_ratio0$grid(yRng = TRUE, xRng = TRUE)
adj <- 0.5
col_tile <- rgb(
red = 0.27,
green = 0.50,
blue = 0.70,
alpha = cc_cpue[["Ratio0"]][, "Ratio"]
)
rect(
xleft = p_ratio0$data()[["x"]] - adj,
ybottom = p_ratio0$data()[["y"]] - adj,
xright = p_ratio0$data()[["x"]] + adj,
ytop = p_ratio0$data()[["y"]] + adj,
col = col_tile,
border = NA
)
xtks <- Reduce(f = `:`, x = p_ratio0[["xrng"]])
ytks <- Reduce(f = `:`, x = p_ratio0[["yrng"]])
# p_ratio0$xticks()
par(mgp = c(3, 0.4, 0))
axis(
side = 2,
at = ytks,
labels = substr(month.abb, start = 1, stop = 1),
col = "transparent",
col.ticks = "grey50",
col.axis = "grey50",
las = 1,
tcl = -0.3,
family = "mono"
)
par(mgp = c(3, 0.3, 0))
axis(
side = 1,
at = xtks[xtks %% 5 == 0],
labels = xtks[xtks %% 5 == 0],
col = "transparent",
col.ticks = "grey50",
col.axis = "grey50",
las = 1,
tcl = -0.3
)
axis(
side = 1,
at = xtks,
labels = NA,
col = "transparent",
col.ticks = "grey50",
col.axis = "grey50",
las = 1,
tcl = -0.2
)
mtext(text = "Year", side = 1, line = 1.2)
mtext(text = "Month", side = 2, line = 1.3)
# color bar
par(mar = c(1, 0.5, 1, 0.5))
p_ratio0_cb <- Plot(
x = seq(from = 0.1, to = 1, by = 0.05),
y = 1,
adjUsr = 0.5
)
n <- length(p_ratio0_cb$data()[["x"]])
rect(
xleft = p_ratio0_cb$data()[["x"]][-n],
ybottom = p_ratio0_cb$data()[["y"]] - adj,
xright = p_ratio0_cb$data()[["x"]][-1],
ytop = p_ratio0_cb$data()[["y"]] + adj,
col = rgb(
red = 0.27,
green = 0.50,
blue = 0.70,
alpha = p_ratio0_cb$data()[["x"]]
),
border = NA
)
Axis(p_ratio0_cb, side = 3, labelAdj = 0.2)
mtext(
text = "zero catch ratio color bar",
side = 1,
line = -0.2,
cex = 0.75,
col = "grey50",
font = 3
)
# clean up
rm(col_tile, xtks, ytks, adj, n)
# knitr::kable(as.data.frame())
xtabs(
formula = Ratio0[, "Recs"] ~ Month + CYear,
data = cc_cpue,
sparse = FALSE,
)
# View(cc_cpue$Ratio0)
# range(cc_cpue[["Ratio0"]][, "Ratio"])
layout(mat = matrix(data = 1:12, ncol = 3, byrow = TRUE))
par(mar = c(2, 2, 0.5, 0.5), oma = c(2.5, 2.5, 0.5, 0.5))
test <- lapply(1:12, FUN = function(m) {
par(mar = c(0.25, 0.25, 0.25, 0.25))
b <- cc_cpue[["Month"]] %in% m
p <- Plot(
x = cc_cpue[["CYear"]],
y = 0:1,
adjUsr = 0.5
)
p$grid(xRng = FALSE)
i <- match(
Reduce(f = `:`, x = range(cc_cpue[["CYear"]])),
table = p$data()[["x"]][b]
)
alpha <- cc_cpue[["Ratio0"]][b, "Recs"] / max(cc_cpue[["Ratio0"]][, "Recs"])
clr <- rgb(red = 0.27, green = 0.50, blue = 0.70, alpha = sqrt(alpha))
points(
x = p$data()[["x"]][b][i],
y = cc_cpue[["Ratio0"]][b, "Ratio"][i],
type = "p",
pch = 21,
col = clr,
# bg = "steelblue",
bg = clr,
cex = 1.5
)
points(
x = p$data()[["x"]][b][i],
y = cc_cpue[["Ratio0"]][b, "Ratio"][i],
type = "c",
col = "grey65",
lty = 2
)
text(
x = p[["xrng"]][[1]],
y = p[["yrng"]][[2]],
labels = month.abb[m],
col = "grey50",
cex = 1,
font = 3,
adj = c(-0.1, 0.7)
)
if (m %in% 10:12)
Axis(p, side = 1, labelAdj = 0.3, interval = 2, cexAxis = 1.2)
if (m %% 3 == 1)
Axis(p, side = 2, labelAdj = 0.4, cexAxis = 1.2)
})
# end lapply
# to get overall age range so levels can be set accordingly in `AgeFreq` below
rng_age <- vapply(catch[["AgeAssign"]], FUN = function(d) {
o <- vapply(d, FUN = function(s) {
range(s[["Aged"]], na.rm = TRUE)
}, FUN.VALUE = numeric(2L))
range(o)
}, FUN.VALUE = numeric(2L))
catch$AgeFreq <- lapply(catch[["AgeAssign"]], FUN = function(d) {
# for looping through male & female lists
sex <- c(m = 'm', f = 'f')
# so table is consistently same size for use in vapply
lvls <- Reduce(f = `:`, x = range(rng_age))
n <- length(lvls)
# for age frequency table by sex
vapply(sex, FUN = function(s) {
table(factor(d[[s]][["Aged"]], levels = lvls))
}, FUN.VALUE = numeric(length = n))
# end inner vapply
})
# end outer lapply
# clean up
# rm(rng_age)
# Reduce(f = max, x = catch[["AgeFreq"]])
colMax <- function(x, dim = 2) apply(x, MARGIN = dim, FUN = max)
maxf <- colMax(
vapply(catch[["AgeFreq"]], FUN = colMax, FUN.VALUE = numeric(2L)),
dim = 1
)
# clean up
rm(colMax)
# for narrative below
maxf_narr <- paste(names(maxf), maxf, sep = ":", collapse = " | ")
p_age_freq <- substitute(
expr = Plot(x = x, y = y, adjUsr = 0.25),
env = list(x = catch[["RelYear"]], y = rng_age)
)
age_freq_tiles <- lapply(c(m = 'm', f = 'f'), FUN = function(s) {
# for color bar & main figure
lo <- layout(mat = 2:1, heights = c(0.15, 0.85))
par(mar = c(0.5, 0.5, 0.5, 0.5), oma = c(2.5, 2.5, 0.5, 0.5))
# to create empty plot
p <- eval(p_age_freq)
# still not sure about using grid for this figure
# p$grid(xRng = TRUE)
# to cycle through age frequencies for each release year
o <- Map(f = function(x, af) {
# get age frequency for specified sex
d <- af[, s]
a <- as.numeric(names(d))
# change to between years (#1) or within year (#2)
alpha <- sqrt(d / maxf[s]) #1
# alpha <- sqrt(prop.table(d)) #2
# alpha <- sqrt(d / sum(d)) #2
# for heat map or tile plot
col_tile <- rgb(
red = 0.27,
green = 0.50,
blue = 0.70,
alpha = alpha
)
# to set 0 to obvious color
col_tile[d == 0] <- "grey60"
# for adjusting size of tile in rect()
adj <- 0.5
# create tiles for each year & age
rect(
xleft = x - adj,
ybottom = a - adj,
xright = x + adj,
ytop = a + adj,
col = col_tile,
border = NA
)
# output for now but not sure this is needed
data.frame(D = d, Clr = col_tile, stringsAsFactors = FALSE)
}, x = catch[["RelYear"]], af = catch[["AgeFreq"]])
# end Map
# axis tick labeling & axis labels
Axis(p, side = 1, labelAdj = 0.3)
Axis(p, side = 2, labelAdj = 0.3)
mtext(text = "Year", side = 1, line = 1.2)
mtext(text = "Age", side = 2, line = 1.3)
# to identify sex & max value used for color bar
mtext(
text = paste(
c(m = "\u2642", f = "\u2640")[s],
paste0("max=", maxf[s]),
sep = " | "
),
side = 3,
line = 0.25,
adj = 0.95,
col = "grey50",
cex = 1.0,
font = 1
)
# for ease of using to create color bar
o <- do.call(what = rbind, args = o)
par(mar = c(1, 1.5, 1, 0.5))
# create color bar plot here *************************************************
p_cb <- Plot(
x = o[["D"]],
y = c(0.99, 1.01),
x0 = TRUE,
adjUsr = 1
)
# to establish x values where alpha = sqrt(xs / maxf[s])
# n <- length(p_cb$data()[["x"]]) * 1L
n <- 100L
xs <- seq(
# from = p_cb[["xrng"]][[1]],
from = 0,
to = p_cb[["xrng"]][[2]],
length.out = n
)
# for height of color bar within plot
ys <- p_cb[["yrng"]] #+ c(0.008, -0.008)
# not crazy about the extra code here to create the color bar but for now it
# will suffice; would like to use data in `o` to reduce some of the redundancy
col_tile <- rgb(
red = 0.27,
green = 0.50,
blue = 0.70,
alpha = sqrt(xs / maxf[s])
)
col_tile[xs == 0] <- "grey60"
rect(
xleft = xs[-n],
ybottom = ys[[1]],
xright = xs[-1],
ytop = ys[[2]],
col = col_tile,
border = NA
)
# to label tick marks with frequency intervals
Axis(p_cb, side = 3, labelAdj = 0.2, cexAxis = 0.75)
mtext(
text = "age frequency color bar",
side = 1,
line = -0.2,
cex = 0.75,
col = "grey50",
font = 3
)
# end color bar **************************************************************
# no output for now
invisible()
})
# end lapply
# clean up
rm(age_freq_tiles)
catch$AgeLenRange <- t(vapply(catch[["AgeAssign"]], FUN = function(d) {
ra <- NULL
rl <- NULL
o <- lapply(d, FUN = function(s) {
fl <- Filter(f = function(ll) ll >= 22, x = s[["RelFL"]])
a <- range(s[["Aged"]], na.rm = TRUE)
l <- range(fl, na.rm = TRUE)
ra <<- range(ra, a)
rl <<- range(rl, l)
})
# end lapply
c(Age = ra, Len = rl)
}, FUN.VALUE = numeric(4L)))
# range(catch[["AgeLenRange"]][, c("Age1", "Age2")])
rng_age_all <- range(rng_age)
rng_len_all <- range(catch[["AgeLenRange"]][, c("Len1", "Len2")])
# for outside margins mostly for space on x- & y-axes to allow for tick labels &
# axis labels
par(oma = c(3, 3, 0.5, 0.5))
# ********************************************************************
# for plotting all years in grid-like fashion ************************
# to get number of plots (i.e., one plot per year)
nplots <- seq_len(length.out = nrow(catch))
# our desired number of columns for plot matrix
ncols <- 5
nrows <- ceiling(length(nplots) / ncols)
lomatrix <- substitute(
expr = matrix(data = d, ncol = nc, nrow = nr, byrow = TRUE),
env = list(d = nplots, nc = ncols, nr = nrows)
)
lo <- layout(mat = eval(expr = lomatrix))
# layout.show(n = lo)
# ********************************************************************
par(mar = c(0.25, 0.25, 0.25, 0.25))
plot_len_age <- Map(f = function(y, d) {
p <- Plot(x = rng_age_all, y = rng_len_all)
p$grid()
# not crazy about the color scheme but will keep it for now
cl <- c(
m = rgb(red = 39/255, green = 8/255, blue = 243/255, alpha = 0.2),
f = rgb(red = 243/255, green = 8/255, blue = 173/255, alpha = 0.2)
)
# attempts below at different colors & points
# cl <- c(
#   m = grey(level = 0.6, alpha = 0.1),
#   f = grey(level = 0.6, alpha = 0.09)
# )
#
# cl <- c(
#   m = adjustcolor(col = "steelblue", alpha.f = 0.1),
#   f = adjustcolor(col = "grey25", alpha.f = 0.1)
# )
# pt <- c(m = "\u2642", f = "\u2640")
# pt <- c(m = 1, f = 4)
# to cycle through by sex & then plot length-at-age
Map(f = function(nms, s) {
# because some fish are 0 or single digits (errors that need to be cleaned)
b <-  s[["RelFL"]] >= 22
# to add length at age with some noise in x-axis to mitigate overplotting
points(
x = jitter(s[b, "Aged"], factor = 0.5),
y = s[b, "RelFL"],
col = grey(level = 0.75, alpha = 0.5),
# col = rgb(red = 0, green = 0, blue = 0, alpha = 0.05),
pch = 1,
cex = 0.75
)
# gives many warnings and have not investigated
lines(
loess.smooth(
x = s[b, "Aged"],
y = s[b, "RelFL"]
),
type = "l",
col = cl[nms],
lwd = 2
)
}, names(d), d)
# end Map
# for placing year in bottom right of plot where probability of data begin
# present there is nill
text(
x = p[["xrng"]][[2]],
y = p[["yrng"]][[1]],
labels = y,
cex = 0.9,
font = 3,
adj = c(1, 0),
col = "grey30"
)
# not crazy about this but for now it correctly places x- & y-axes tick
# labels; tried using modulo but to no avail due to missing years
if (y %in% c(1969, 1974, 1979, 1984, 1989, 1994, 2003, 2009, 2015))
Axis(p, side = 2, labelAdj = 0.3, cexAxis = 1)
if (y %in% 2015:2019)
Axis(p, side = 1, labelAdj = 0.3, cexAxis = 1)
# no output for now
invisible(NULL)
}, catch[["RelYear"]], catch[["AgeAssign"]])
# end outer Map
# return layout to single plot & then label axes accordingly
layout(mat = 1)
mtext(text = "Age", side = 1, line = 1.9)
mtext(text = "Fork length (cm)", side = 2, line = 2.25)
# clean up
rm(nplots, ncols, nrows, lomatrix, lo, plot_len_age)
StripedBass <- readRDS("U:/SportFish/Staff Files/JDuBois/0_RProjects/StripedBassPopMetrics/data/tagging/StripedBass.rds")
View(StripedBass)
StriperAll <- readRDS("U:/SportFish/Staff Files/JDuBois/0_RProjects/StripedBassPopMetrics/data/tagging/StriperAll.rds")
View(StriperAll)
View(Tagging)
StripedBass <- readRDS("C:/Users/JaHobbs/OneDrive - California Department of Fish and Wildlife/SportFish/0_RProjects/StripedBassPopMetrics/data/tagging/StripedBass.rds")
View(StripedBass)
View(catch)
p_abund <- Plot(
x = catch[["RelYear"]],
y = catch[["AbunLowUpBounds"]],
subset = catch[["RelYear"]] > 2000
)
p_abund$grid(xRng = TRUE)
# for desired format to plot (cols 1-2 male lower upper, 3-4 female)
ydat <- matrix(p_abund$data()[["y"]], ncol = 4)
colm <- rgb(red = 0.99, green = 0.54, blue = 0, alpha = 0.75)
colf <- rgb(red = 0.27, green = 0.50, blue = 0.70, alpha = 0.75)
# to plot males
segments(
x0 = p_abund$data()[["x"]] - 0.1,
y0 = ydat[, 1],
y1 = ydat[, 2],
lwd = 10,
lend = 1,
col = colm
)
# to plot females
segments(
x0 = p_abund$data()[["x"]] + 0.1,
y0 = ydat[, 3],
y1 = ydat[, 4],
lwd = 10,
lend = 1,
col = colf
)
# tick labels & axis label
Axis(p_abund, side = 1, labelAdj = 0.3, interval = 2)
yaxis <- Axis(p_abund, side = 2, labelAdj = 0.4, format = TRUE)
mtext(text = "Year", side = 1, line = 1.2)
mtext(text = yaxis$AxisTitle(var = "Abundance"), side = 2, line = 1.2)
# to add legend for male|female distinction
legend(
x = p_abund[["xrng"]][[2]],
y = p_abund[["yrng"]][[2]],
legend = c("\u2642", "\u2640"),
# legend = c(NA, NA),
# pch = c("\u2642", "\u2640"),
# col = c(colm, colf),
# pt.cex = 2,
border = NA,
text.col = c(colm, colf),
text.width = 0.05,
text.font = 2,
cex = 2,
ncol = 1,
xjust = 0.45,
bty = "n",
xpd = TRUE
)
# chunk clean up
rm(ydat, colm, colf, yaxis)
