"0",""
"0","catch$TagC <- lapply(catch[[""RelYear""]], FUN = function(y) {"
"0","  "
"0","  # to find first, second, third, & fourth updates for each release year"
"0","  ydiff <- catch[[""RelYear""]] - y"
"0","  "
"0","  # for subsetting the appropriate release year & AgeCom"
"0","  index <- which(ydiff %in% 1:4)"
"0","  "
"0","  # so output is named with the appropriate update year"
"0","  names(index) <- catch[[""RelYear""]][index]"
"0","  "
"0","  # to loop through sex (male & female)"
"0","  lapply(c(m = 'm', f = 'f'), FUN = function(s) {"
"0","    "
"0","    # to loop through indices to get agecom data for release year + 1|2|3|4"
"0","    vapply(index, FUN = function(i) {"
"0","      if (length(i) == 0) return(NULL)"
"0","      r <- rowSums(catch[[""AgeCom""]][[i]][[s]])"
"0","      sl <- catch[[""AgeCom""]][[i]][[s]][, ""S""]"
"0","      "
"0","      # to remove sub-legals (very few) but just to be consistent"
"0","      r <- r - sl"
"0","      nms <- names(r)"
"0","      "
"0","      # variable to be repeated within switch(); likely will be 0 but could decide"
"0","      # to use NA"
"0","      v <- 0L"
"0","      # v <- NA_integer_"
"0","      "
"0","      a <- as.character(4:7)"
"0","      "
"0","      # select ages based on year difference up to 4 years difference from"
"0","      # release year"
"0","      switch ("
"0","        EXPR = as.character(ydiff[i]),"
"0","        `1` = r <- c(r[a], rep(v, times = 2)),"
"0","        `2` = r <- c(r[a[-1]], rep(v, times = 3)),"
"0","        `3` = r <- c(r[a[-(1:2)]], rep(v, times = 4)),"
"0","        `4` = r <- c(r[a[-(1:3)]], rep(v, times = 5)),"
"0","        r <- c(r[a[-(1:3)]], rep(v, times = 5))"
"0","      )"
"0","      "
"0","      # to preserve ages (as names) for final output"
"0","      names(r) <- c(3:7, ""8p"")"
"0","      r"
"0","    }, FUN.VALUE = numeric(6L))"
"0","    # end vapply"
"0","  })"
"0","  # end inner lapply"
"0","})"
"0","# end outer lapply"
"0",""
"0","catch$InSeasonTagC <- lapply(catch[[""AgeCom""]], FUN = function(y) {"
"0","  a <- c(3:7, ""8p"")"
"0","  vapply(y, FUN = function(s) {"
"0","    r <- rowSums(s[a, ])"
"0","    r - s[a, ""S""]"
"0","  }, FUN.VALUE = numeric(length(a)))"
"0","})"
"0",""
