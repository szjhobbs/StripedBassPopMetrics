"0",""
"0","# chunk creates tag release dataframe for getting tagging recaptures in next"
"0","# chunk; using this approach (as opposed to Tagging$StripedBass) as Sex & most"
"0","# ages have been apportioned in catch$AgeAssign (11-Jun-2020)"
"0",""
"0","tag_release <- Map(f = function(y, a) {"
"0","  "
"0","  # for the convenience of adding field for Sex"
"0","  out <- Map(f = function(s, d) {"
"0","    d$Sex <- s"
"0","    d$Sex <- factor(d[[""Sex""]], levels = c('m', 'f'))"
"0","    d"
"0","  }, names(a), a)"
"0","  "
"0","  # to combind into data frame for eventual output"
"0","  out <- do.call(what = rbind, args = out)"
"0","  "
"0","  # TagNum CapMethod RelFL TagActionF RelAge0 LenCat Aged Sex"
"0","  # get only desired fields & only fish that were tagged"
"0","  out <- subset("
"0","    out,"
"0","    subset = TagActionF %in% c(""Ml"", ""Ms""),"
"0","    select = c(TagNum, Sex, RelFL, LenCat, Aged)"
"0","  )"
"0","  "
"0","  # for convenience of having release year"
"0","  out$RelYear <- y"
"0","  out"
"0","  "
"0","}, catch[[""RelYear""]], catch[[""AgeAssign""]])"
"0",""
"0","tag_release <- do.call(what = rbind, args = tag_release)"
"0","rownames(tag_release) <- NULL"
"0",""
"0","# for desired age range used to group in factoring below"
"0","rng_age <- range(tag_release[[""Aged""]], na.rm = TRUE)"
"0","min7 <- rng_age[[1]]:7"
"0","nplus8 <- length(8:rng_age[[2]])"
"0",""
"0","lbls <- c(min7, rep(""8p"", times = nplus8))"
"0","exclude <- NA # `factor()` default"
"0",""
"0","# to include NA as `Un` if any"
"0","if (any(is.na(tag_release[[""Aged""]]))) {"
"0","  lbls <- c(lbls, ""Un"")"
"0","  exclude <- NULL # will include NA"
"0","}"
"0",""
"0","# for grouping ages as min --> 7 and 8p (>= age-8), with Un for unknown age"
"0","tag_release$Aged <- factor("
"0","  tag_release[[""Aged""]],"
"0","  levels = sort(unique(tag_release[[""Aged""]]), na.last = TRUE),"
"0","  labels = lbls,"
"0","  exclude = exclude"
"0",")"
"0",""
"0","# chunk clean up"
"0","rm(rng_age, min7, nplus8, lbls, exclude)"
"0",""
