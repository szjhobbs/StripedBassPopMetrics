"0",""
"0","# ******************************************************************************"
"0","# need dataframe with all ages apportioned & all sex apportioned to get release"
"0","# data from recaps in creel census, cannot use Tagging$StripedBass as age &"
"0","# sex are apportioned at different stages in `catch` dataframe (05-Jun-2020)"
"0",""
"0","new_data <- do.call("
"0","  what = rbind,"
"0","  args = lapply(catch[[""AgeAssign""]], FUN = function(x) {"
"0","    do.call(what = rbind, args = x)"
"0","  })"
"0",")"
"0",""
"0","year_sex <- do.call("
"0","  what = rbind,"
"0","  args = strsplit(dimnames(new_data)[[1]], split = ""\\."")"
"0",")"
"0",""
"0","dimnames(year_sex) <- list(NULL, c(""Year"", ""Sex"", ""Num""))"
"0",""
"0","new_data <- data.frame("
"0","  year_sex[, 1:2],"
"0","  new_data,"
"0","  stringsAsFactors = FALSE"
"0",")"
"0",""
"0","# factoring for inclusion of all levels when calling `table()`"
"0","new_data$Sex <- factor(new_data[[""Sex""]], levels = c('m', 'f'))"
"0",""
"0","# lvls <- sort(unique(new_data[[""Aged""]]), na.last = TRUE)"
"0","lvls <- sort(unique(new_data[[""Aged""]]))"
"0","a8p <- length(8:max(lvls))"
"0","new_data$Aged <- factor("
"0","  new_data[[""Aged""]],"
"0","  levels = lvls,"
"0","  labels = c(2:7, rep(""8p"", times = a8p)),"
"0","  exclude = NULL"
"0",")"
"0","# ******************************************************************************"
"0",""
"0","creel$Recaps <- lapply(creel[[""Data""]], FUN = function(d) {"
"0","  "
"0","  s <- Split("
"0","    data = d,"
"0","    subset = !is.na(TagNUM) & !(LenCat %in% ""sub""),"
"0","    splitVars = Type"
"0","  )"
"0","  "
"0","  lapply(s[[""Data""]], FUN = function(dd) {"
"0","    b <- new_data[[""TagActionF""]] %in% c(""Ml"", ""Ms"")"
"0","    i <- match(dd[[""TagNUM""]], table = new_data[[""TagNum""]][b])"
"0","    table(new_data[b, c(""Aged"", ""Year"", ""Sex"")][i, ], useNA = ""ifany"")"
"0","  })"
"0","})"
"0",""
"0","# clean up"
"0","rm(lvls, new_data, year_sex, a8p)"
"0",""
