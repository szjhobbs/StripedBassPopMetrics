"0",""
"0","# to apportion creel census catch by sex"
"0","creel$BayCatchApportioned <- Map(f = function(y, bp, bx, cc = census_count) {"
"0","  "
"0","  # for subsetting inputs"
"0","  b <- cc[[""CYear""]] %in% y  & cc[[""Type""]] %in% ""bay"""
"0","  "
"0","  # for matching with census_count (i.e., total catch)"
"0","  nms <- names(bp)"
"0","  i <- match(as.numeric(nms), table = cc[b, ""Month""])"
"0","  "
"0","  o <- cc[b, ""CatchSum""][i] * bp"
"0","  "
"0","  cen <- o %/% 1"
"0","  "
"0","  b <- is.na(cen)"
"0","  "
"0","  # to hold the left over after integer division above, `lo` not likely to be a"
"0","  # whole number, thus the call to round as `size` in sample() performs integer"
"0","  # division if not a whole number; this is not a perfect solution but allows"
"0","  # for at least one sample when lo would be < 1"
"0","  lo <- round(sum(o %% 1, na.rm = TRUE), digits = 0)"
"0","  "
"0","  # print(cbind(lo, round(lo, digits = 0)))"
"0","  "
"0","  # assigning leftover (lo) to bay creel month (found in nms)"
"0","  nms <- names(cen[!b])"
"0","  p <- prop.table(cen[!b])"
"0","  s <- sample(nms, size = lo, replace = TRUE, prob = p)"
"0","  s <- factor(s, levels = names(cen))"
"0","  "
"0","  # add left over to whole counts"
"0","  cen <- cen + table(s)"
"0","  "
"0","  dnms <- dimnames(bx)[[1]]"
"0","  "
"0","  # for each month we need to apportion sex, so we take monthly catch"
"0","  # (frequency) and using sex ratio sample 'm' or 'f' accordingly; the result is"
"0","  # table month x sex"
"0","  res <- vapply(dnms, FUN = function(x) {"
"0","    if (is.na(cen[[x]])) return(c(m = NA, f = NA))"
"0","    s <- sample(c('m', 'f'), size = cen[[x]], replace = TRUE, prob = bx[x, ])"
"0","    s <- factor(s, levels = c('m', 'f'))"
"0","    table(s)"
"0","  }, FUN.VALUE = numeric(2L))"
"0","  "
"0","  # for desired orientation of results"
"0","  t(res)"
"0","  "
"0","}, creel[[""CYear""]], creel[[""BayPropMeasLegal""]], creel[[""BayPropBySex""]])"
"0",""
