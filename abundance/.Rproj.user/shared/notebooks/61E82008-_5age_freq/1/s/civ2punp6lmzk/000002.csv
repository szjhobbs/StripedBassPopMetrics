"0",""
"0","# to get overall age range so levels can be set accordingly in `AgeFreq` below"
"0","rng_age <- vapply(catch[[""AgeAssign""]], FUN = function(d) {"
"0","  o <- vapply(d, FUN = function(s) {"
"0","      range(s[[""Aged""]], na.rm = TRUE)"
"0","  }, FUN.VALUE = numeric(2L))"
"0","  range(o)"
"0","}, FUN.VALUE = numeric(2L))"
"0",""
"0","catch$AgeFreq <- lapply(catch[[""AgeAssign""]], FUN = function(d) {"
"0","  "
"0","  # for looping through male & female lists"
"0","  sex <- c(m = 'm', f = 'f')"
"0","  "
"0","  # so table is consistently same size for use in vapply"
"0","  lvls <- Reduce(f = `:`, x = range(rng_age))"
"0","  n <- length(lvls)"
"0","  "
"0","  # for age frequency table by sex"
"0","  vapply(sex, FUN = function(s) {"
"0","    table(factor(d[[s]][[""Aged""]], levels = lvls))"
"0","  }, FUN.VALUE = numeric(length = n))"
"0","  # end inner vapply"
"0","})"
"0","# end outer lapply"
"0",""
"0","# clean up"
"0","# rm(rng_age)"
"0",""
